<form id="form_new">
  <div class="login-one-start">
    <h6 class="mt-2 text-primary text-center font-20"><%= t('common.plat_name') %></h6>
    <p class="text-center text-muted mt-3 mb-3 font-14"><%= t(".sign_up_tip") %></p>
    <div class="login-one-inputs mt-5">
      <input id="input_address" name="user[address]" type="text" readonly placeholder="<%= t('.your_address') %>" required>
      <i class="la la-id-badge"></i>
    </div>
    <div class="login-one-inputs mt-3">
      <input id="input_parent" name="user[invite_code]" type="text" placeholder="<%= t('.parent_id') %>" required>
      <i class="la la-user-alt"></i>
    </div>
    <div class="login-one-inputs mt-4">
      <button class="btn btn-primary btn-login ladda-button" type="submit" data-style="zoom-in">
        <%= t('.sign_up') %>
      </button>
    </div>
  </div>
</form>

<script>
    let web3;

    function init_page() {
        web3.eth.getAccounts(function (err, result) {
            let address = result[0], BN = web3.utils.BN;
            Business.get('/users/exists', {address: address}, function (data) {
                    if (data.exists)
                        self.location = '/dashboard/index';
                    else {
                        $('#input_address').val(address);
                        <% if @parent %>
                        $('#input_parent').val('<%= @parent.invite_code %>');
                        <% end %>

                        $('#form_new').submit(function () {
                            let l = $('#form_new button[type="submit"]').ladda();
                            l.ladda('start');

                            let contract_usdt = new web3.eth.Contract(Contracts.usdt.abi, Contracts.usdt.address);
                            let amount = new BN('2').pow(new BN(256)).sub(new BN(1));
                            contract_usdt.methods.approve(Contracts.cic.address, amount).send({from: address})
                                .on('transactionHash', function (hash) {
                                    Business.submit_form(
                                        '/users/create', 'form_new',
                                        function (result) {
                                            l.ladda('stop');
                                            self.location = '/dashboard/index';
                                        }, function (err) {
                                            l.ladda('stop');
                                            swal('<%= t('errors.error') %>', err.msg, 'error');
                                        }
                                    );
                                })
                                .on('error', function (err) {
                                    l.ladda('stop');
                                    swal('<%= t('errors.error') %>', err.message, 'error');
                                });

                            return false;
                        });
                    }
                }
            );

        });
    }

    $(function () {
        getWeb3().then(res => {
            web3 = res;
            web3.eth.getChainId().then(function (result) {
                if (result === 56)
                    init_page();
                else if (window.ethereum)
                    window.ethereum.request({
                        method: 'wallet_switchEthereumChain',
                        params: [{chainId: '0x38'}],
                    }).then(() => {
                        init_page();
                    }).catch((err) => {
                        console.log(err);
                        if (err.code === 4092) {
                            window.ethereum.request({
                                method: 'wallet_addEthereumChain',
                                params: [{
                                    chainId: '0x38',
                                    chainName: 'Binance Smart Chain Mainnet',
                                    nativeCurrency: {
                                        name: 'Binance Coin',
                                        symbol: 'BNB',
                                        decimals: 18
                                    },
                                    rpcUrls: ['https://bsc-dataseed1.defibit.io'],
                                    blockExplorerUrls: ['https://bscscan.com']
                                }]
                            }).then((result) => {
                                init_page();
                            }).catch(() => {
                                swal('<%= t('tips.notice') %>', '<%= t('dashboard.index.switch_to_bsc') %>', 'info');
                            });
                        } else
                            swal('<%= t('tips.notice') %>', '<%= t('dashboard.index.switch_to_bsc') %>', 'info');
                    });
                else
                    swal('<%= t('tips.notice') %>', '<%= t('dashboard.index.switch_to_bsc') %>', 'info');
            });
        }).catch(function (result) {
            console.log(result);
        });
    });
</script>